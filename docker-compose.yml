services:
  nginx:
    build:
      context: ./docker/nginx
    ports:
      - "8081:80"
    depends_on:
      - php-fpm
    networks:
      - mynetwork

  php-fpm:
    container_name: app
    build:
      context: ./docker/app
      args:
        - PUID=${PUID}
        - PGID=${PGID}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
    volumes:
      - .:/var/www/html
    user: 1000:1000
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    networks:
      - mynetwork

  cron:
    build:
      context: './docker/cron'
    volumes:
      - .:/var/www/html
    user: root
    restart: on-failure
    networks:
      - mynetwork

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    ports:
      - "33061:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mynetwork

  storage:
    build:
      context: ./docker/storage
    volumes:
      - ./storage/app/public:/app/public
    ports:
      - ${STORAGE_PORT:-8083}:80

  ftp-server:
    environment:
      - FTP_PASS=${STORAGE_FTP_PASSWORD:-password}
      - FTP_USER=${STORAGE_FTP_USERNAME:-app}
    image: garethflowers/ftp-server
    ports:
      - '20-21:20-21/tcp'
      - '40000-40009:40000-40009/tcp'
    volumes:
      - ./storage/app/public:${STORAGE_FTP_HOME:-/home/app}
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

  sentry:
    platform: linux/amd64
    container_name: sentry
    image: sentry:latest
    env_file:
      - .env
    ports:
      - '9000:9000'
    depends_on:
      - sentry-db
      - sentry-redis
    tty: true
    stdin_open: true
    networks:
      - mynetwork

  sentry-cron:
    platform: linux/amd64
    container_name: sentry-cron
    image: sentry:latest
    command: "sentry run cron"
    env_file:
      - .env
    depends_on:
      - sentry-db
      - sentry-redis
    networks:
      - mynetwork
  sentry-worker:
    platform: linux/amd64
    container_name: sentry-worker
    image: sentry:latest
    command: "sentry run worker"
    env_file:
      - .env
    depends_on:
      - sentry-db
      - sentry-redis
    networks:
      - mynetwork
  sentry-redis:
    container_name: sentry-redis
    image: bitnami/redis:6.2.4
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    networks:
      - mynetwork
  sentry-db:
    container_name: sentry-postgres
    image: postgres
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: secret
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - mynetwork

volumes:
  redis-data:
  mysql-data:
  pg-data:

networks:
  mynetwork:
    driver: bridge
